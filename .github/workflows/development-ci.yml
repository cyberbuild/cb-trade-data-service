name: Development CI & PR to Master

# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the development branch
  push:
    branches:
      - development
  # Triggers the workflow on pull request events targeting the development branch
  pull_request:
    branches:
      - development

# Set default permissions for the GITHUB_TOKEN
# These permissions are necessary for the actions used in this workflow.
permissions:
  contents: write # Needed for peter-evans/create-pull-request to push a branch and create a PR
  packages: write # Needed to publish packages to GitHub Packages
  pull-requests: write # Needed to create pull requests

jobs:
  build-test-publish-and-pr:
    name: Build, Test, Publish & Create PR
    runs-on: ubuntu-latest # Specifies the type of runner the job will run on
    env: # Set environment variables for all steps in this job
      PYTHON DONTWRITEBYTECODE: '1' # Prevents Python from writing .pyc files

    steps:
      # 1. Checkout your repository code
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Fetches all history for all branches and tags.
          fetch-depth: 0

      # 2. Set up Conda environment
      # Ensure your environment.yml has 'name: cb-trade', 'python=3.9',
      # and includes 'flake8' and 'black' (e.g., under the pip section).
      - name: Set up Conda environment
        uses: conda-incubator/setup-miniconda@v3
        with:
          activate-environment: cb-trade # Explicitly set to match environment.yml name
          environment-file: environment.yml # Path to your conda environment file
          python-version: '3.9' # Align with python=3.9 in environment.yml
          auto-activate-base: false # We want to activate the environment from the file
          use-mamba: true # Use Mamba for faster and potentially more robust dependency resolution

      - name: Install/Update Conda environment including pip dependencies
        shell: bash -l {0}
        run: |
          conda activate cb-trade
          conda env create --name cb-trade --file environment.yml --prune

      # 4. (Optional but Recommended) Lint and Format Check
      # Example using Flake8 and Black. Adapt to your project's tools.
      # These tools should be installed via your environment.yml file.
      - name: Lint and Format Check
        # Ensures conda environment is activated
        shell: bash
        run: |
          echo "Running linters and format checkers. Ensure flake8 and black are in environment.yml."
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          black --check .

      # 5. Run tests
      # Assumes tests are run with pytest, using the conda environment's Python.
      - name: Run tests with Pytest
        # Ensures conda environment is activated
        shell: bash
        run: pytest

      # 6. Build package
      # This step uses the 'build' package, which requires a pyproject.toml.
      # It should use the Python from the activated conda environment.
      - name: Build package
        # Ensures conda environment is activated
        shell: bash
        run: python -m build

      # 7. Publish to GitHub Packages (only on direct push to development)
      - name: Publish package to GitHub Packages
        if: github.event_name == 'push' && github.ref == 'refs/heads/development'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.GITHUB_TOKEN }}
          repository_url: https://pypi.pkg.github.com/YOUR_USERNAME_OR_ORG/ # IMPORTANT: Replace with your GitHub username or organization

      # 8. Create Pull Request from development to master (only on direct push to development)
      - name: Create Pull Request to master
        if: github.event_name == 'push' && github.ref == 'refs/heads/development'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Auto-PR: Merge development into master after successful CI"
          branch: auto-pr/development-to-master
          base: master
          head: development
          title: 'Auto-PR: Merge `development` into `master`'
          body: |
            Automated Pull Request
            - This PR was automatically created after a successful build, test, and package publish on the `development` branch.
            - Please review the changes before merging.

            Triggered by commit: ${{ github.sha }}
          labels: automated pr, development-merge
          # assignees: your-github-username
          # reviewers: your-github-username,another-reviewer
          # draft: false